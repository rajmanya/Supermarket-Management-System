/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SupplierRole;

import Business.Enterprise.Enterprise;
import Business.Organization.SupplierOrganization;
import Business.Product.Product;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class SupplierManageProductJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierManageProductJPanel
     */
    private JPanel rightJPanel;
    private Enterprise enterprise;
    int flag;
    private UserAccount userAccount;
    private SupplierOrganization supplierOrg;
    
    public SupplierManageProductJPanel(JPanel rightJPanel,UserAccount userAccount,SupplierOrganization supplierOrg,Enterprise enterprise) {
        initComponents();
        this.rightJPanel=rightJPanel;
        this.enterprise=enterprise;
        this.userAccount=userAccount;
        this.supplierOrg=supplierOrg;
        populateProdTable();
        
    }

    private void populateProdTable()
    {
        DefaultTableModel model = (DefaultTableModel) prodTbl.getModel();
        
        model.setRowCount(0);
        
        for (Product prod : enterprise.getProdDir().getProductList()){
            Object[] row = new Object[3];
            //System.out.println("supplier.getSupplierId(): "+supplier.getSupplierId());
            row[0] = prod;
            //System.out.println("supplier.getSupplierName(): "+supplier.getSupplierName());
            row[1] = prod.getProductId();
            row[2]= prod.getQuantity();
            model.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        prodTbl = new javax.swing.JTable();
        RemoveProductBtn = new javax.swing.JButton();
        AddProductBtn = new javax.swing.JButton();
        ViewRequestBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ProductIDTxt = new javax.swing.JTextField();
        prodNameComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        quantitySpinner = new javax.swing.JSpinner();

        setBackground(new java.awt.Color(232, 104, 80));

        prodTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product Name", "Product ID", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(prodTbl);

        RemoveProductBtn.setText("Remove");
        RemoveProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveProductBtnActionPerformed(evt);
            }
        });

        AddProductBtn.setText("Add");
        AddProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddProductBtnActionPerformed(evt);
            }
        });

        ViewRequestBtn.setText("View Request >>");
        ViewRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewRequestBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Product ID");

        jLabel2.setText("Product name");

        prodNameComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--SELECT--", "EGGS", "ORANGE", "YOGHURT", "CHEESE", "BREAD", "MIXED VEG", "CAPSICUM", "APPLES" }));

        jLabel3.setText("Quantity");

        quantitySpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(RemoveProductBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AddProductBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ViewRequestBtn))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ProductIDTxt)
                                .addComponent(prodNameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ProductIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(prodNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddProductBtn)
                    .addComponent(ViewRequestBtn)
                    .addComponent(jLabel3)
                    .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RemoveProductBtn)
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AddProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddProductBtnActionPerformed
        flag=0;
        if(prodNameComboBox.getSelectedItem().equals("--SELECT"))
        {
            JOptionPane.showMessageDialog(null, "Please select the product");
            //ProductNameTxt.setText("");
            flag=1;
        }
        
        if (flag==0){             
            try{
                Integer.parseInt(ProductIDTxt.getText());                
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter numeric value only for ProductID field!!");
                return;
            }
            
            Object q = quantitySpinner.getValue();
            int quantity = Integer.parseInt(q.toString());
            
            Product prod=enterprise.getProdDir().addProduct();
            prod.setProductName((String)prodNameComboBox.getSelectedItem());
            prod.setProductId(Integer.parseInt(ProductIDTxt.getText()));
            prod.setQuantity(quantity);
                    
            JOptionPane.showMessageDialog(null, "Product Details added successfully");
            }
        else{
                JOptionPane.showMessageDialog(null, "Unable to add product details. Please enter correct values in fields!!");
        }
        populateProdTable();
    }//GEN-LAST:event_AddProductBtnActionPerformed

    private void ViewRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewRequestBtnActionPerformed
        SupplierViewRequestJPanel svrjp= new SupplierViewRequestJPanel(rightJPanel,userAccount,supplierOrg,enterprise);
        rightJPanel.add("SupplierViewRequestJPanel", svrjp);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.next(rightJPanel); 
    }//GEN-LAST:event_ViewRequestBtnActionPerformed

    private void RemoveProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveProductBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow=prodTbl.getSelectedRow();
        if(selectedRow >= 0){
            int selectionButton = JOptionPane.YES_NO_CANCEL_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null,"Are you sure you want to delete","Warning", selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                Product p = (Product) prodTbl.getValueAt(selectedRow,0);
      enterprise.getProdDir().removeProducet(p);
      populateProdTable();
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Plese select a row!!");
        }
    }//GEN-LAST:event_RemoveProductBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddProductBtn;
    private javax.swing.JTextField ProductIDTxt;
    private javax.swing.JButton RemoveProductBtn;
    private javax.swing.JButton ViewRequestBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> prodNameComboBox;
    private javax.swing.JTable prodTbl;
    private javax.swing.JSpinner quantitySpinner;
    // End of variables declaration//GEN-END:variables
}
