/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SupplierRole;

import Business.Enterprise.Enterprise;
import Business.Organization.SupplierOrganization;
import Business.Product.Product;
import Business.Supplier.Supplier;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WarehouseManagerWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class SupplierViewRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierViewRequestJPanel
     */
    private JPanel rightJPanel;
    private Enterprise enterprise;
    int flag;
    private UserAccount userAccount;
    private SupplierOrganization supplierOrg;
    DefaultTableModel model;
    public SupplierViewRequestJPanel(JPanel rightJPanel,UserAccount userAccount,SupplierOrganization supplierOrg,Enterprise enterprise) {
        initComponents();
        this.rightJPanel=rightJPanel;
        this.enterprise=enterprise;
        this.userAccount=userAccount;
        this.supplierOrg=supplierOrg;
        
        System.out.println("Inside SupplierViewRequestJPanel");
        populateTable();
    }

    public void populateTable(){
               
        model = (DefaultTableModel)SupplierViewProdTable.getModel();
        
        model.setRowCount(0);
        System.out.println("Inside populateTable of SupplierViewRequestJPanel");
        System.out.println("warehouseOrg.getWorkQueue().getWorkRequestList(): "+supplierOrg.getWorkQueue().getWorkRequestList());
        
//            for (Supplier s:enterprise.getSupplierDirectory().getSupplierList()){
                for(WorkRequest request : supplierOrg.getWorkQueue().getWorkRequestList()){
//                if(request.getSupplierName().equals(s.getSupplierName())){
                    System.out.println("request.getSupplierName(): "+request.getSupplierName());
                    //System.out.println("s.getSupplierName(): "+s.getSupplierName());
                    System.out.println("Inside for of warehouseOrg.getWorkQueue().getWorkRequestList()");
                    Object[] row = new Object[3];
                    row[0] = request;
                    row[1]=request.getProductId();
                    row[2]=request.getRequestedQuantity();
            
                    model.addRow(row);
                }
           // }
        //}
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        SupplierViewProdTable = new javax.swing.JTable();
        Backbtn = new javax.swing.JButton();
        SendBtn = new javax.swing.JButton();
        viewProjectRequestLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(232, 104, 80));

        SupplierViewProdTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product Name", "Product ID", "Quantity Required"
            }
        ));
        jScrollPane1.setViewportView(SupplierViewProdTable);

        Backbtn.setText("<< Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });

        SendBtn.setText("Complete Request");
        SendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendBtnActionPerformed(evt);
            }
        });

        viewProjectRequestLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewProjectRequestLabel.setText("View Product Request");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(Backbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addComponent(SendBtn)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewProjectRequestLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(viewProjectRequestLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Backbtn)
                    .addComponent(SendBtn))
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        rightJPanel.remove(this);
        CardLayout layout = (CardLayout) rightJPanel.getLayout();
        layout.previous(rightJPanel); 
    }//GEN-LAST:event_BackbtnActionPerformed

    private void SendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendBtnActionPerformed
        int selectedRow = SupplierViewProdTable.getSelectedRow();
        
        System.out.println("Selected Row :"+selectedRow);
        
        if (selectedRow < 0){
            return;
        }
        else{
            //String a=storeManagerTbl.getValueAt(selectedRow, 0);;
            WarehouseManagerWorkRequest wareMngRequest = (WarehouseManagerWorkRequest)SupplierViewProdTable.getValueAt(selectedRow, 0);
            int quantity;
            wareMngRequest.setStatus("Completed");
        
            System.out.println("Request Completed");
            
            JOptionPane.showMessageDialog(null, "Request Completed by Supplier ");
            
            System.out.println("enterprise.getProdDir().getProductList(): "+enterprise.getProdDir().getProductList());
            for (Product p:enterprise.getProdDir().getProductList()){
                System.out.println("Inside product for");
                if(p.getProductName().equals(wareMngRequest.getProductName())){
                    System.out.println("Inside product if ");
                    quantity=p.getQuantity()+wareMngRequest.getRequestedQuantity();
                    //Product prod=enterprise.getProdDir().addProduct();
                    p.setQuantity(quantity);
                    wareMngRequest.setRequestedQuantity(quantity);
                }
            }
            
            for (Product p:enterprise.getProdDir().getProductList()){
                System.out.println("Inside Product print p");
                System.out.println("name: "+p.getProductName());
                System.out.println("prod ID: "+p.getProductId());
                System.out.println("quantity: "+p.getQuantity());
            }
            
            JOptionPane.showMessageDialog(null, "Request Completed by Supplier ");
            
            if(wareMngRequest.getStatus().equals("Completed")){
                if(selectedRow!=-1){
                    model.removeRow(selectedRow);
                }
                
            }
        }
        populateTable();
    }//GEN-LAST:event_SendBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JButton SendBtn;
    private javax.swing.JTable SupplierViewProdTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel viewProjectRequestLabel;
    // End of variables declaration//GEN-END:variables
}
