/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Store;

import Business.Enterprise.Enterprise;
import Business.Enterprise.WarehouseEnterprise;
import Business.Organization.Organization;
import Business.Organization.StoreInventoryOrganization;
import Business.Organization.StoreManagerOrganization;
import Business.Organization.WarehouseInventoryOrganization;
import Business.Product.Product;
import Business.SuperMarket;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.StoreInventoryWorkRequest;
import Business.WorkQueue.StoreManagerWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.Network.City;
import Business.Stores.StoreLocation;
import Business.Stores.StoreLocationsDirectory;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class StoreManagerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StoreMakeRequest
     */
    private JPanel rightJPanel;
    private StoreManagerOrganization storeOrg;
    //private StoreInventoryOrganization storInvOrg;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private SuperMarket supermarket;
    private StoreLocationsDirectory storeLoc;
    
    public StoreManagerJPanel(JPanel rightJPanel,UserAccount userAccount,StoreManagerOrganization storeOrg,Enterprise enterprise,SuperMarket supermarket) {
        initComponents();
        this.rightJPanel=rightJPanel;
        this.userAccount=userAccount;
        this.storeOrg=storeOrg;
        this.enterprise=enterprise;
        this.supermarket=supermarket;
        storeLoc=new StoreLocationsDirectory();
        
        System.out.println("Inside StoreManagerJPanel");
        System.out.println("enterprise: "+enterprise);
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)storeManagerTbl.getModel();
        
        model.setRowCount(0);
        
        System.out.println("Inside populateTable");
        System.out.println("storeOrg3getWorkQueue().getWorkRequestList(): "+storeOrg.getWorkQueue().getWorkRequestList());
        
        for(WorkRequest request : storeOrg.getWorkQueue().getWorkRequestList()){
            
            System.out.println("Inside for");
        
            Object[] row = new Object[3];
            row[0] = request;
            //System.out.println("row[0]: "+row[0]);
//            row[1] = request.getSender().getEmployee().getName();
//            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
//            row[3] = request.getStatus();
            row[1]=request.getProductId();
            row[2]=request.getRequestedQuantity();
            
            model.addRow(row);
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        storeManagerTbl = new javax.swing.JTable();
        approveSendBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        locationTxtFld = new javax.swing.JTextField();
        addLocationBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(232, 104, 80));

        storeManagerTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product Name", "Product Id", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(storeManagerTbl);

        approveSendBtn.setText("Approve & Send ");
        approveSendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveSendBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Incoming Requests");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Location");

        addLocationBtn.setText("Add Location");
        addLocationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLocationBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(approveSendBtn)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(226, 226, 226)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(locationTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(addLocationBtn)))
                .addGap(139, 139, 139))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addLocationBtn))
                .addGap(26, 26, 26)
                .addComponent(approveSendBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void approveSendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveSendBtnActionPerformed
        int selectedRow = storeManagerTbl.getSelectedRow();
        
        System.out.println("Selected Row :"+selectedRow);
        
        if (selectedRow < 0){
            return;
        }
        else{
            //String a=storeManagerTbl.getValueAt(selectedRow, 0);;
            StoreInventoryWorkRequest storeInvRequest = (StoreInventoryWorkRequest)storeManagerTbl.getValueAt(selectedRow, 0);
     
            int prodID=storeInvRequest.getProductId();
            String prodName=storeInvRequest.getProductName();
            int quant=storeInvRequest.getRequestedQuantity();
            
            System.out.println("prodID: "+prodID);
            System.out.println("prodName: "+prodName);
            System.out.println("quant: "+quant);
            
            storeInvRequest.setStatus("Completed");
        
            System.out.println("Request Completed and send to warehouse Inv");
            
            //Product p=(Product)storeManagerTbl.getValueAt(selectedRow, 0);
        
        StoreManagerWorkRequest storeMngRequest = new StoreManagerWorkRequest();
        //StoreInventoryWorkRequest storeInvRequest = new StoreInventoryWorkRequest();
        /*storeInvRequest.setMessage(message);
        storeInvRequest.setSender(userAccount);
        storeInvRequest.setStatus("Sent");*/
        //storeMngRequest.setProd(p);
        //storeMngRequest.setMessage(storeInvRequest);
        storeMngRequest.setProductId(prodID);
        storeMngRequest.setProductName(prodName);
        storeMngRequest.setRequestedQuantity(quant);
        
        
        //System.out.println("enterprise.getOrganizationDirectory().getOrganizationList(): "+enterprise.getOrganizationDirectory().getOrganizationList());
        Organization org = null;
        for (City c : supermarket.getCityList()){
            for (Enterprise e: c.getEnterpriseDirectory().getEnterpriseList()){
                if (e instanceof WarehouseEnterprise){
                    for (Organization organization : e.getOrganizationDirectory().getOrganizationList()){
                        if (organization instanceof WarehouseInventoryOrganization){
                        org = organization;
                        System.out.println("enterprise.getOrganizationDirectory().getOrganizationList(): "+e.getOrganizationDirectory().getOrganizationList());
                        System.out.println("org: "+org);
                        break;
                    }
                }
            }
        }
        }
        /*for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof WarehouseInventoryOrganization){
                org = organization;
                System.out.println("enterprise.getOrganizationDirectory().getOrganizationList(): "+enterprise.getOrganizationDirectory().getOrganizationList());
                System.out.println("org: "+org);
                break;
            }
        }*/
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(storeMngRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(storeMngRequest);
            System.out.println("Work Queue updated for warehouse Inv!!");
            System.out.println("org: "+org);
        }
            
        }
        
        
        
        //Send request to Warehouse inventory manager
        //String message = storeManagerTbl.getValueAt(selectedRow, 0);
        
        
        
        
    }//GEN-LAST:event_approveSendBtnActionPerformed

    private void addLocationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLocationBtnActionPerformed
        // TODO add your handling code here:
        
        StoreLocation location = storeLoc.addStore();
        location.setStoreLocation(locationTxtFld.getText());
        
        JOptionPane.showMessageDialog(null, "Location added Successfully"); 
               
        
        
    }//GEN-LAST:event_addLocationBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addLocationBtn;
    private javax.swing.JButton approveSendBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locationTxtFld;
    private javax.swing.JTable storeManagerTbl;
    // End of variables declaration//GEN-END:variables
}
